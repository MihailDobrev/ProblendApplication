@model Problend.Models.CartonBox

@{
    ViewBag.Title = "Добави клиент";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Създай кашон</h2>

@using (Html.BeginForm("Create", "CartonBox", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Създаване на кашон става като се попълнят полетата</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lenght, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lenght, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lenght, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">
                <label class="btn btn-default">
                    <img src="~/Images/HomePage/AddingPictures.png" width="60" />
                    <input type="file" name="file" id="images" multiple="multiple" onclick="Clear('images-to-upload')" style="display:none;" />
                </label>
            </div>
            <div class="panel-body">
                <div id="images-to-upload">
                    @*Preview images here*@
                </div>
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Създай кашон" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Обратно към списъка с кашони", "All")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">

    $('#images').on('change', function (e) {

        var files = e.target.files;

        $.each(files, function (i, file) {
            var reader = new FileReader();
            reader.readAsDataURL(file);

            reader.onload = function (e) {
                var template = '<img src="' + e.target.result + '" alt="" width="150" />' + ' &nbsp; ';

                $('#images-to-upload').append(template);
            };
        });
    });


    function clear(elementID) {
        document.getElementById(elementID).innerHTML = "";
    }
</script>